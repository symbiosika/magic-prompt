{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    // {
    //   "name": "Current TS File",
    //   "type": "node",
    //   "request": "launch",
    //   "runtimeExecutable": "node",
    //   "args": ["${relativeFile}"],
    //   "runtimeArgs": ["--nolazy", "-r", "ts-node/register/transpile-only"],
    //   "envFile": "${workspaceFolder}/.env",
    //   "cwd": "${workspaceRoot}",
    //   "internalConsoleOptions": "openOnSessionStart",
    //   "skipFiles": ["<node_internals>/**", "node_modules/**"]
    // },
    // {
    //   "name": "Debug Jest Tests",
    //   "type": "node",
    //   "request": "launch",
    //   "runtimeArgs": [
    //     "--inspect-brk",
    //     "${workspaceRoot}/node_modules/.bin/jest",
    //     "--runInBand"
    //   ],
    //   "envFile": "${workspaceFolder}/.env",
    //   "console": "integratedTerminal",
    //   "internalConsoleOptions": "neverOpen",
    //   "port": 9229,
    //   "disableOptimisticBPs": true,
    //   "windows": {
    //     "program": "${workspaceFolder}/node_modules/jest/bin/jest"
    //   }
    // },
    // {
    //   "name": "Debug Jest Current File",
    //   "type": "node",
    //   "request": "launch",
    //   "program": "${workspaceFolder}/node_modules/.bin/jest",
    //   "args": ["${relativeFile}", "--config", "jest.config.js"],
    //   "console": "integratedTerminal",
    //   "internalConsoleOptions": "neverOpen",
    //   "port": 9229,
    //   "disableOptimisticBPs": true,
    //   "windows": {
    //     "program": "${workspaceFolder}/node_modules/jest/bin/jest"
    //   }
    // },
    {
      "type": "bun",
      "request": "launch",
      "name": "Launch demo.summarize-files.test.ts",
      // The path to a JavaScript or TypeScript file to run.
      "program": "${workspaceFolder}/test/demo.summarize-files.test.ts",
      // The arguments to pass to the program, if any.
      "args": [],
      // The working directory of the program.
      "cwd": "${workspaceFolder}",
      // The environment variables to pass to the program.
      "env": {},
      // If the environment variables should not be inherited from the parent process.
      "strictEnv": false,
      // If the program should be run in watch mode.
      // This is equivalent to passing `--watch` to the `bun` executable.
      // You can also set this to "hot" to enable hot reloading using `--hot`.
      "watchMode": false,
      // If the debugger should stop on the first line of the program.
      "stopOnEntry": false,
      // If the debugger should be disabled. (for example, breakpoints will not be hit)
      "noDebug": false,
      // The path to the `bun` executable, defaults to your `PATH` environment variable.
      "runtime": "bun",
      // The arguments to pass to the `bun` executable, if any.
      // Unlike `args`, these are passed to the executable itself, not the program.
      "runtimeArgs": []
    },
    {
      "type": "bun",
      "request": "attach",
      "name": "Attach to Bun",

      // The URL of the WebSocket inspector to attach to.
      // This value can be retrieved by using `bun --inspect`.
      "url": "ws://localhost:6499/"
    }
  ]
}
